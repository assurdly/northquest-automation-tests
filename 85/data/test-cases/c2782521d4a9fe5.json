{"uid":"c2782521d4a9fe5","name":"Create Dispute-Invalid transaction id","fullName":"QA - Cashdrive / Business/Transactions/Create Dispute#Create Dispute-Invalid transaction id","historyId":"9b75e02c4bdb223ae4c6812d473904af:8837d5e124aa2f36b9efe3d59c8e5a2a","time":{"start":1747599898223,"stop":1747599898275,"duration":52},"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1747599898273,"stop":1747599898273,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:247)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Test for valid error message","time":{"start":1747599898274,"stop":1747599898274,"duration":0},"status":"failed","statusMessage":"expected 'Invalid access token' to include 'Transaction ID must be a valid UUID'","statusTrace":"AssertionError: expected 'Invalid access token' to include 'Transaction ID must be a valid UUID'\n   at Object.eval sandbox-script.js:2:247)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"73d1351b297834f8","name":"PreRequest","source":"73d1351b297834f8.txt","type":"text/plain","size":290},{"uid":"917305fc42cdc614","name":"Request Headers","source":"917305fc42cdc614.json","type":"application/json","size":447},{"uid":"aad7309dd381156c","name":"Request Body","source":"aad7309dd381156c.txt","type":"text/plain","size":83},{"uid":"4ce44b58f71ce5c3","name":"Response Headers","source":"4ce44b58f71ce5c3.json","type":"application/json","size":877},{"uid":"4603d2f02d4ef4ef","name":"Response Body","source":"4603d2f02d4ef4ef.txt","type":"text/plain","size":63}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1690-80"},{"name":"thread","value":"pid-2381-worker-main"},{"name":"parentSuite","value":"QA - Cashdrive / Business"},{"name":"suite","value":"Transactions"},{"name":"subSuite","value":"Create Dispute"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserFetchedProfileId%7D%7D/transactions/disputes"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c2782521d4a9fe5.json","parameterValues":["POST - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserFetchedProfileId%7D%7D/transactions/disputes","401"]}