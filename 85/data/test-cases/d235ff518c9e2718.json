{"uid":"d235ff518c9e2718","name":"Create Transfer Beneficiary-Invalid Profile Id","fullName":"QA - Cashdrive / Business/Beneficiaries/Transfer Beneficiaries/Create Beneficiary#Create Transfer Beneficiary-Invalid Profile Id","historyId":"e9dada57645942654249d185d2468796:8560e7c9c38a61919038b56dd1cc83ff","time":{"start":1747599894514,"stop":1747599894551,"duration":37},"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1747599894549,"stop":1747599894549,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:162)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Test for valid error message","time":{"start":1747599894550,"stop":1747599894550,"duration":0},"status":"failed","statusMessage":"expected 'Invalid access token' to include 'Profile ID must be a valid UUID'","statusTrace":"AssertionError: expected 'Invalid access token' to include 'Profile ID must be a valid UUID'\n   at Object.eval sandbox-script.js:2:162)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"93fc3f2e3046ec84","name":"PreRequest","source":"93fc3f2e3046ec84.txt","type":"text/plain","size":290},{"uid":"c5da613b3d51c725","name":"Request Headers","source":"c5da613b3d51c725.json","type":"application/json","size":448},{"uid":"2cc28f49f684a42c","name":"Request Body","source":"2cc28f49f684a42c.txt","type":"text/plain","size":123},{"uid":"9ce27afa42f8e083","name":"Response Headers","source":"9ce27afa42f8e083.json","type":"application/json","size":869},{"uid":"f1180d0b74b9a6c1","name":"Response Body","source":"f1180d0b74b9a6c1.txt","type":"text/plain","size":63}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1690-80"},{"name":"thread","value":"pid-2381-worker-main"},{"name":"parentSuite","value":"QA - Cashdrive / Business"},{"name":"suite","value":"Beneficiaries"},{"name":"subSuite","value":"Transfer Beneficiaries > Create Beneficiary"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserProfileId%7D%7D1/transfer-beneficiaries"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":9},"items":[{"uid":"81463e78d7b7708b","reportUrl":"https://assurdly.github.io/northquest-automation-tests/83//#testresult/81463e78d7b7708b","status":"passed","time":{"start":1747248326306,"stop":1747248326420,"duration":114}},{"uid":"931599ff57563412","reportUrl":"https://assurdly.github.io/northquest-automation-tests/82//#testresult/931599ff57563412","status":"passed","time":{"start":1746995073454,"stop":1746995073557,"duration":103}},{"uid":"6be66a1469c31b37","reportUrl":"https://assurdly.github.io/northquest-automation-tests/80//#testresult/6be66a1469c31b37","status":"passed","time":{"start":1746643545778,"stop":1746643545935,"duration":157}},{"uid":"56a3eaa7ec06538f","reportUrl":"https://assurdly.github.io/northquest-automation-tests/79//#testresult/56a3eaa7ec06538f","status":"passed","time":{"start":1746390294887,"stop":1746390294995,"duration":108}},{"uid":"7301fefa6c45a18a","reportUrl":"https://assurdly.github.io/northquest-automation-tests/78//#testresult/7301fefa6c45a18a","status":"passed","time":{"start":1746211697842,"stop":1746211698555,"duration":713}},{"uid":"ca9797ebab9ef0de","reportUrl":"https://assurdly.github.io/northquest-automation-tests/77//#testresult/ca9797ebab9ef0de","status":"passed","time":{"start":1746038743232,"stop":1746038743339,"duration":107}},{"uid":"18a40973c1b90c0a","reportUrl":"https://assurdly.github.io/northquest-automation-tests/76//#testresult/18a40973c1b90c0a","status":"passed","time":{"start":1745785483882,"stop":1745785484064,"duration":182}},{"uid":"131366f0f7a1533e","reportUrl":"https://assurdly.github.io/northquest-automation-tests/74//#testresult/131366f0f7a1533e","status":"passed","time":{"start":1745544569665,"stop":1745544569854,"duration":189}}]},"tags":[]},"source":"d235ff518c9e2718.json","parameterValues":["POST - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserProfileId%7D%7D1/transfer-beneficiaries","401"]}