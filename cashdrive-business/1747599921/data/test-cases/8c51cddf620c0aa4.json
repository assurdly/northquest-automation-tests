{"uid":"8c51cddf620c0aa4","name":"Get Transfer Beneficiaries-Invalid Profile Id","fullName":"QA - Cashdrive / Business/Beneficiaries/Transfer Beneficiaries/Get Beneficiaries#Get Transfer Beneficiaries-Invalid Profile Id","historyId":"1dacf30f9f0aeb26843513db69ddd0bf:9e1762dc583eb26c76a30deef69419b0","time":{"start":1747599894830,"stop":1747599894869,"duration":39},"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1747599894866,"stop":1747599894866,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:170)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Test for valid error message","time":{"start":1747599894867,"stop":1747599894867,"duration":0},"status":"failed","statusMessage":"expected 'Invalid access token' to include 'Profile ID must be a valid UUID'","statusTrace":"AssertionError: expected 'Invalid access token' to include 'Profile ID must be a valid UUID'\n   at Object.eval sandbox-script.js:2:170)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"da361bc90a867138","name":"PreRequest","source":"da361bc90a867138.txt","type":"text/plain","size":290},{"uid":"806c727cba053287","name":"Request Headers","source":"806c727cba053287.json","type":"application/json","size":379},{"uid":"642a8012e5089b15","name":"Response Headers","source":"642a8012e5089b15.json","type":"application/json","size":879},{"uid":"d3f2ac823f642b7b","name":"Response Body","source":"d3f2ac823f642b7b.txt","type":"text/plain","size":63}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1690-80"},{"name":"thread","value":"pid-2381-worker-main"},{"name":"parentSuite","value":"QA - Cashdrive / Business"},{"name":"suite","value":"Beneficiaries"},{"name":"subSuite","value":"Transfer Beneficiaries > Get Beneficiaries"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserProfileId%7D%7D1/transfer-beneficiaries"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":9},"items":[{"uid":"1f51bad189abfd26","reportUrl":"https://assurdly.github.io/northquest-automation-tests/83//#testresult/1f51bad189abfd26","status":"passed","time":{"start":1747248327393,"stop":1747248328097,"duration":704}},{"uid":"ceee4ea9cede3402","reportUrl":"https://assurdly.github.io/northquest-automation-tests/82//#testresult/ceee4ea9cede3402","status":"passed","time":{"start":1746995074334,"stop":1746995074440,"duration":106}},{"uid":"32c2561be6dd06a0","reportUrl":"https://assurdly.github.io/northquest-automation-tests/80//#testresult/32c2561be6dd06a0","status":"passed","time":{"start":1746643546806,"stop":1746643546916,"duration":110}},{"uid":"8f4624032b3a064a","reportUrl":"https://assurdly.github.io/northquest-automation-tests/79//#testresult/8f4624032b3a064a","status":"passed","time":{"start":1746390295550,"stop":1746390295605,"duration":55}},{"uid":"fe99cb1c30a16aab","reportUrl":"https://assurdly.github.io/northquest-automation-tests/78//#testresult/fe99cb1c30a16aab","status":"passed","time":{"start":1746211700530,"stop":1746211700852,"duration":322}},{"uid":"1dca53ca7bbb67c0","reportUrl":"https://assurdly.github.io/northquest-automation-tests/77//#testresult/1dca53ca7bbb67c0","status":"passed","time":{"start":1746038744658,"stop":1746038744770,"duration":112}},{"uid":"e57c6f9ed95eff17","reportUrl":"https://assurdly.github.io/northquest-automation-tests/76//#testresult/e57c6f9ed95eff17","status":"passed","time":{"start":1745785485132,"stop":1745785485215,"duration":83}},{"uid":"e9cc09b65ca366fb","reportUrl":"https://assurdly.github.io/northquest-automation-tests/74//#testresult/e9cc09b65ca366fb","status":"passed","time":{"start":1745544570971,"stop":1745544571082,"duration":111}}]},"tags":[]},"source":"8c51cddf620c0aa4.json","parameterValues":["GET - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserProfileId%7D%7D1/transfer-beneficiaries","401"]}