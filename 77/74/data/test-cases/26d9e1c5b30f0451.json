{"uid":"26d9e1c5b30f0451","name":"Create Dispute-Empty fields","fullName":"QA - Cashdrive / Retail/Transactions/Create Dispute#Create Dispute-Empty fields","historyId":"67acc8c40cfa9fb0a58abd375abba573:8837d5e124aa2f36b9efe3d59c8e5a2a","time":{"start":1745784590122,"stop":1745784590170,"duration":48},"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1745784590168,"stop":1745784590168,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:177)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Test for valid error message","time":{"start":1745784590168,"stop":1745784590168,"duration":0},"status":"failed","statusMessage":"expected 'Invalid access token' to include 'Note cannot be empty,Transaction ID i…'","statusTrace":"AssertionError: expected 'Invalid access token' to include 'Note cannot be empty,Transaction ID i…'\n   at Object.eval sandbox-script.js:2:177)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bb7c5bebe576750f","name":"PreRequest","source":"bb7c5bebe576750f.txt","type":"text/plain","size":148},{"uid":"61bbc83539e5bb3a","name":"Request Headers","source":"61bbc83539e5bb3a.json","type":"application/json","size":445},{"uid":"7501eb771cedc77","name":"Request Body","source":"7501eb771cedc77.txt","type":"text/plain","size":44},{"uid":"590fa13b0d5f42b6","name":"Response Headers","source":"590fa13b0d5f42b6.json","type":"application/json","size":522},{"uid":"23e5b46f8a3a57b2","name":"Response Body","source":"23e5b46f8a3a57b2.txt","type":"text/plain","size":63}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1392-39"},{"name":"thread","value":"pid-2404-worker-main"},{"name":"parentSuite","value":"QA - Cashdrive / Retail"},{"name":"suite","value":"Transactions"},{"name":"subSuite","value":"Create Dispute"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserFetchedProfileId%7D%7D/transactions/disputes"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"26d9e1c5b30f0451.json","parameterValues":["POST - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserFetchedProfileId%7D%7D/transactions/disputes","401"]}