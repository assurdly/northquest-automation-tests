{"uid":"9b02b70205288843","name":"Get Transfer Beneficiaries-Invalid Profile Id","fullName":"QA - Cashdrive / Business/Beneficiaries/Transfer Beneficiaries/Get Beneficiaries#Get Transfer Beneficiaries-Invalid Profile Id","historyId":"1dacf30f9f0aeb26843513db69ddd0bf:9e1762dc583eb26c76a30deef69419b0","time":{"start":1744575830712,"stop":1744575830817,"duration":105},"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1744575830815,"stop":1744575830815,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:170)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Test for valid error message","time":{"start":1744575830815,"stop":1744575830815,"duration":0},"status":"failed","statusMessage":"expected 'Invalid access token' to include 'Profile ID must be a valid UUID'","statusTrace":"AssertionError: expected 'Invalid access token' to include 'Profile ID must be a valid UUID'\n   at Object.eval sandbox-script.js:2:170)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b5593b3400c9e664","name":"PreRequest","source":"b5593b3400c9e664.txt","type":"text/plain","size":290},{"uid":"e65b86d9daa5702c","name":"Request Headers","source":"e65b86d9daa5702c.json","type":"application/json","size":379},{"uid":"84793e125c3d48b9","name":"Response Headers","source":"84793e125c3d48b9.json","type":"application/json","size":1135},{"uid":"43d8c11c8a4395c9","name":"Response Body","source":"43d8c11c8a4395c9.txt","type":"text/plain","size":63}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1696-852"},{"name":"thread","value":"pid-2313-worker-main"},{"name":"parentSuite","value":"QA - Cashdrive / Business"},{"name":"suite","value":"Beneficiaries"},{"name":"subSuite","value":"Transfer Beneficiaries > Get Beneficiaries"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserProfileId%7D%7D1/transfer-beneficiaries"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"d7a5cc5bf54d2c44","reportUrl":"https://assurdly.github.io/northquest-automation-tests/65//#testresult/d7a5cc5bf54d2c44","status":"passed","time":{"start":1744210867100,"stop":1744210867208,"duration":108}},{"uid":"ae8207782a5fa603","reportUrl":"https://assurdly.github.io/northquest-automation-tests/64//#testresult/ae8207782a5fa603","status":"passed","time":{"start":1743971015462,"stop":1743971015580,"duration":118}},{"uid":"727e262f0b1fa423","reportUrl":"https://assurdly.github.io/northquest-automation-tests/60//#testresult/727e262f0b1fa423","status":"passed","time":{"start":1743574115861,"stop":1743574115918,"duration":57}}]},"tags":[]},"source":"9b02b70205288843.json","parameterValues":["GET - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserProfileId%7D%7D1/transfer-beneficiaries","401"]}