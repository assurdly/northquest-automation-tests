{"uid":"b42b1c7853709bc9","name":"Create Dispute-Invalid transaction id","fullName":"QA - Cashdrive / Retail/Transactions/Create Dispute#Create Dispute-Invalid transaction id","historyId":"e6802de9794d2ad59d028ddbd556cfe9:8837d5e124aa2f36b9efe3d59c8e5a2a","time":{"start":1748026180944,"stop":1748026181135,"duration":191},"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Test for valid error message","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Status code is 400","time":{"start":1748026181133,"stop":1748026181133,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:176)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Test for valid error message","time":{"start":1748026181134,"stop":1748026181134,"duration":0},"status":"failed","statusMessage":"expected 'Invalid access token' to include 'Transaction ID must be a valid UUID'","statusTrace":"AssertionError: expected 'Invalid access token' to include 'Transaction ID must be a valid UUID'\n   at Object.eval sandbox-script.js:2:176)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5b22a9c3513c0b9d","name":"PreRequest","source":"5b22a9c3513c0b9d.txt","type":"text/plain","size":148},{"uid":"8e05bde9fc2fcbf9","name":"Request Headers","source":"8e05bde9fc2fcbf9.json","type":"application/json","size":445},{"uid":"cac75c65445c9781","name":"Request Body","source":"cac75c65445c9781.txt","type":"text/plain","size":83},{"uid":"b047bebea0569967","name":"Response Headers","source":"b047bebea0569967.json","type":"application/json","size":873},{"uid":"c9a7977099333b2e","name":"Response Body","source":"c9a7977099333b2e.txt","type":"text/plain","size":63}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1694-668"},{"name":"thread","value":"pid-2414-worker-main"},{"name":"parentSuite","value":"QA - Cashdrive / Retail"},{"name":"suite","value":"Transactions"},{"name":"subSuite","value":"Create Dispute"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserFetchedProfileId%7D%7D/transactions/disputes"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b42b1c7853709bc9.json","parameterValues":["POST - https://public.northquestfinance.com/api-backend/profiles/%7B%7BuserFetchedProfileId%7D%7D/transactions/disputes","401"]}