name: Postman Test and Allure Report

on:
  push:
    branches:
      - main
    paths:
      - 'backoffice-apis/**'
  schedule:
    - cron: '30 18 * * 3'
    - cron: '30 18 * * 5'
    - cron: '0 20 * * 0'

jobs:
  run_tests:
    if: github.event_name == 'schedule' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install newman and newman-reporter-allure
        run: |
          npm install -g newman newman-reporter-allure

      - name: Run Postman tests
        if: always()
        continue-on-error: true
        run: |
          newman run backoffice-apis/backoffice-apis.json --reporters cli,allure

      - name: Prepare Allure history and versioning
        id: get_latest_folder
        run: |
          mkdir -p allure-history
          latest_number=$(find allure-history -maxdepth 1 -type d -name "[0-9]*" | sort -V | tail -n 1 | xargs basename 2>/dev/null || echo "0")
          if [[ ! "$latest_number" =~ ^[0-9]+$ ]]; then
            latest_number=0
          fi
          next_number=$((latest_number + 1))
          echo "NEXT_FOLDER_NUMBER=$next_number" >> $GITHUB_ENV
          echo "::set-output name=next_folder::$next_number"

      - name: Generate Allure report
        id: build
        uses: simple-elf/allure-report-action@master
        if: always()
        continue-on-error: true
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history
          subfolder: ${{ env.NEXT_FOLDER_NUMBER }}

      - name: Generate index redirect to latest report
        run: |
          latest=${{ env.NEXT_FOLDER_NUMBER }}
          mkdir -p allure-history/latest
          echo "<script>window.location.href='/${latest}/index.html';</script>" > allure-history/latest/index.html

      # # Optional: Deploy to Render using rsync, curl, or GH integration
      # # Replace this with whatever Render setup you use (Git auto-deploy or upload script)
      # - name: Upload to Render (example only)
      #   run: |
      #     echo "Assuming Render is auto-deploying from main branch or render.yaml"
