{
	"info": {
		"_postman_id": "d71236bf-1949-4b2e-8bb4-4b1013805ffd",
		"name": "Tenants Public API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Definitions",
			"item": [
				{
					"name": "List Definitions",
					"item": [
						{
							"name": "List Definitions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0068d3a-99b7-4a7e-a6ec-2d6c810f3db5",
										"exec": [
											"try {",
											"    const { data, status } = pm.response.json()",
											"    pm.environment.set('fetchedDefinitionId', data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"array\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3239358c-38c3-41f7-bb5d-fc7db1e7726a",
										"exec": [
											"// pm.environment.set('origin', \"https://northquestfinance.com\")",
											"",
											"pm.environment.set('base_url', 'http://platform-alb-1140284525.us-east-2.elb.amazonaws.com/api-backend')",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d30dabc8-6aa1-4802-ad7a-595ab73350c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions"
									],
									"query": [
										{
											"key": "filter[name]",
											"value": "profiles",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "36a33fce-48a4-4585-8743-ff3069d7d78e",
									"name": "List Definitions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "359"
										},
										{
											"key": "ETag",
											"value": "W/\"167-dfnHEiazsJTpImacoeiat204EbY\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:35:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n            \"meta\": null,\n            \"created_on\": \"2024-09-27T11:59:36.320Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null,\n            \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"slug\": \"profiles\",\n            \"name\": \"Profiles\",\n            \"description\": null,\n            \"version\": 1\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "List Definitions-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c318e41e-9235-4ab6-a3a8-050e9093fcd6",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "dee05508-537c-4aa8-8531-520a595fef0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions"
									],
									"query": [
										{
											"key": "filter[name]",
											"value": "profiles",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-0000@@@@@"
										}
									]
								}
							},
							"response": [
								{
									"id": "7217c0b9-5e43-4e75-a7c5-5abf2ca587fd",
									"name": "List Definitions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "359"
										},
										{
											"key": "ETag",
											"value": "W/\"167-dfnHEiazsJTpImacoeiat204EbY\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:35:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n            \"meta\": null,\n            \"created_on\": \"2024-09-27T11:59:36.320Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null,\n            \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"slug\": \"profiles\",\n            \"name\": \"Profiles\",\n            \"description\": null,\n            \"version\": 1\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "List Definitions - Filter options",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b3048c5-e11f-4150-98ef-5c667e6f68a9",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.not.be.empty",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b37155f0-cda8-423f-be2c-89280f53e4cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions?filter[name]=profiles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions"
									],
									"query": [
										{
											"key": "filter[name]",
											"value": "profiles"
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "72802339-5597-4b60-9a5b-d39e47a3ae3f",
									"name": "List Definitions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "359"
										},
										{
											"key": "ETag",
											"value": "W/\"167-dfnHEiazsJTpImacoeiat204EbY\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:35:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n            \"meta\": null,\n            \"created_on\": \"2024-09-27T11:59:36.320Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null,\n            \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"slug\": \"profiles\",\n            \"name\": \"Profiles\",\n            \"description\": null,\n            \"version\": 1\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "List Definitions - No auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3941ab07-2c7c-4bc4-b922-20258e707ecd",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "901babda-0c37-49c3-95a5-793e580849b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions?filter[name]=profiles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions"
									],
									"query": [
										{
											"key": "filter[name]",
											"value": "profiles"
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "9103dbc8-5468-4331-b9fb-5c9af40a03b7",
									"name": "List Definitions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "359"
										},
										{
											"key": "ETag",
											"value": "W/\"167-dfnHEiazsJTpImacoeiat204EbY\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:35:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n            \"meta\": null,\n            \"created_on\": \"2024-09-27T11:59:36.320Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null,\n            \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"slug\": \"profiles\",\n            \"name\": \"Profiles\",\n            \"description\": null,\n            \"version\": 1\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "1828e80a-39b3-4384-bad8-8f76a4c31ed3"
				},
				{
					"name": "Get Definition",
					"item": [
						{
							"name": "Get Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5de468d-a5a0-4e25-9a66-5a0672cea566",
										"exec": [
											"try {",
											"    const { status, data } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"object\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "ed772809-64f6-44e0-a6cd-2862358a2f82",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "{{fetchedDefinitionId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "1b528026-02f9-4695-adc6-8cd651e0d8fa",
									"name": "Get Definition",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "851"
										},
										{
											"key": "ETag",
											"value": "W/\"353-JwG4DSWZmiX9xUgUpuiVbHQXrQ4\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:38:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n        \"meta\": null,\n        \"created_on\": \"2024-09-27T11:59:36.320Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"slug\": \"profiles\",\n        \"name\": \"Profiles\",\n        \"description\": null,\n        \"version\": 1,\n        \"schemas\": [\n            {\n                \"id\": \"01923272-bb64-7c78-94f5-2bf9c692f08f\",\n                \"meta\": null,\n                \"created_on\": \"2024-09-27T09:36:57.352Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2024-09-27T09:36:57.352Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_by\": null,\n                \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"slug\": \"name\",\n                \"name\": \"Name\",\n                \"tags\": null,\n                \"options\": null,\n                \"version\": 1,\n                \"type\": \"text\",\n                \"default\": null,\n                \"enabled\": true,\n                \"required\": true,\n                \"order\": 1,\n                \"storage_strategy\": \"plain\",\n                \"definition_id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Definition-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a57195f-4062-43cc-8ba2-3b5a2c2677bd",
										"exec": [
											"try {",
											"    const { status, message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.eql(\"Tenant ID must be a valid UUID\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e93be740-f2a6-46f7-9e00-06939ce7981d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": ""
										},
										{
											"key": "definitionId",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "669ec704-07d7-45be-9d46-dbff0dba01de",
									"name": "Get Definition",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "851"
										},
										{
											"key": "ETag",
											"value": "W/\"353-JwG4DSWZmiX9xUgUpuiVbHQXrQ4\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:38:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n        \"meta\": null,\n        \"created_on\": \"2024-09-27T11:59:36.320Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"slug\": \"profiles\",\n        \"name\": \"Profiles\",\n        \"description\": null,\n        \"version\": 1,\n        \"schemas\": [\n            {\n                \"id\": \"01923272-bb64-7c78-94f5-2bf9c692f08f\",\n                \"meta\": null,\n                \"created_on\": \"2024-09-27T09:36:57.352Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2024-09-27T09:36:57.352Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_by\": null,\n                \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"slug\": \"name\",\n                \"name\": \"Name\",\n                \"tags\": null,\n                \"options\": null,\n                \"version\": 1,\n                \"type\": \"text\",\n                \"default\": null,\n                \"enabled\": true,\n                \"required\": true,\n                \"order\": 1,\n                \"storage_strategy\": \"plain\",\n                \"definition_id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Definition-Invalid Tenant id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27cc0998-bdbc-49de-912b-11f19188d847",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "6c63fe24-f490-4c2c-a02c-53b9cbf63f6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-@@@@@@"
										},
										{
											"key": "definitionId",
											"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
										}
									]
								}
							},
							"response": [
								{
									"id": "bec3476d-785c-4abe-b7ae-1cc65de2b575",
									"name": "Get Definition",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "851"
										},
										{
											"key": "ETag",
											"value": "W/\"353-JwG4DSWZmiX9xUgUpuiVbHQXrQ4\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:38:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n        \"meta\": null,\n        \"created_on\": \"2024-09-27T11:59:36.320Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"slug\": \"profiles\",\n        \"name\": \"Profiles\",\n        \"description\": null,\n        \"version\": 1,\n        \"schemas\": [\n            {\n                \"id\": \"01923272-bb64-7c78-94f5-2bf9c692f08f\",\n                \"meta\": null,\n                \"created_on\": \"2024-09-27T09:36:57.352Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2024-09-27T09:36:57.352Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_by\": null,\n                \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"slug\": \"name\",\n                \"name\": \"Name\",\n                \"tags\": null,\n                \"options\": null,\n                \"version\": 1,\n                \"type\": \"text\",\n                \"default\": null,\n                \"enabled\": true,\n                \"required\": true,\n                \"order\": 1,\n                \"storage_strategy\": \"plain\",\n                \"definition_id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Definition-Invalid Definition id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0c1b116-a767-4235-9f70-70dbae4be0c5",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes('not found')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "641fdf7f-a875-4afd-afde-2c163135d1b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "01923359-cd8b-755b-862f-22b00cdce000"
										}
									]
								}
							},
							"response": [
								{
									"id": "8dbdd8f5-573c-4682-add8-361b5015df9d",
									"name": "Get Definition",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "851"
										},
										{
											"key": "ETag",
											"value": "W/\"353-JwG4DSWZmiX9xUgUpuiVbHQXrQ4\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:38:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n        \"meta\": null,\n        \"created_on\": \"2024-09-27T11:59:36.320Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"slug\": \"profiles\",\n        \"name\": \"Profiles\",\n        \"description\": null,\n        \"version\": 1,\n        \"schemas\": [\n            {\n                \"id\": \"01923272-bb64-7c78-94f5-2bf9c692f08f\",\n                \"meta\": null,\n                \"created_on\": \"2024-09-27T09:36:57.352Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2024-09-27T09:36:57.352Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_by\": null,\n                \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"slug\": \"name\",\n                \"name\": \"Name\",\n                \"tags\": null,\n                \"options\": null,\n                \"version\": 1,\n                \"type\": \"text\",\n                \"default\": null,\n                \"enabled\": true,\n                \"required\": true,\n                \"order\": 1,\n                \"storage_strategy\": \"plain\",\n                \"definition_id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\"\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Definition-No auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "048db903-c704-4454-a223-7adbc5ab9193",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "400cf676-65e8-4063-978b-94a56b19bb53",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
										}
									]
								}
							},
							"response": [
								{
									"id": "9e518094-3973-4743-91c9-fd7d63870690",
									"name": "Get Definition",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "851"
										},
										{
											"key": "ETag",
											"value": "W/\"353-JwG4DSWZmiX9xUgUpuiVbHQXrQ4\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:38:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\",\n        \"meta\": null,\n        \"created_on\": \"2024-09-27T11:59:36.320Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-09-27T11:59:36.320Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"slug\": \"profiles\",\n        \"name\": \"Profiles\",\n        \"description\": null,\n        \"version\": 1,\n        \"schemas\": [\n            {\n                \"id\": \"01923272-bb64-7c78-94f5-2bf9c692f08f\",\n                \"meta\": null,\n                \"created_on\": \"2024-09-27T09:36:57.352Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2024-09-27T09:36:57.352Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_by\": null,\n                \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n                \"slug\": \"name\",\n                \"name\": \"Name\",\n                \"tags\": null,\n                \"options\": null,\n                \"version\": 1,\n                \"type\": \"text\",\n                \"default\": null,\n                \"enabled\": true,\n                \"required\": true,\n                \"order\": 1,\n                \"storage_strategy\": \"plain\",\n                \"definition_id\": \"01923359-cd8b-755b-862f-22b00cdce2e8\"\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"id": "7cdb77ed-380d-4c3b-9902-659108bd949a"
				},
				{
					"name": "Create Definition",
					"item": [
						{
							"name": "Create Definition",
							"id": "94a9409d-61c4-4f6d-8dcc-1ca9bfbd4805",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitionss",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitionss"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "a210e235-ad47-47c0-b14f-84eac0fccaa4",
									"name": "Create Definition",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "360"
										},
										{
											"key": "ETag",
											"value": "W/\"168-77DVtKPMBj/1pjavqGoYfqeQVgc\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\",\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"meta\": null,\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-10-06T23:44:16.311Z\",\n        \"modified_on\": \"2024-10-06T23:44:16.311Z\",\n        \"deleted_on\": null,\n        \"version\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Create Definition-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91956bae-4d61-447c-b0ee-a288ea26a391",
										"exec": [
											"try {",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", () => {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code name has string\", function () {",
											"        pm.response.to.have.status(\"Bad Request\");",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes(\"slug should not be empty\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes(\"name should not be empty\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes(\"description should not be empty\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b2b9cd07-48e6-422b-9bb2-6c4477e59444",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"\",\n    \"name\": \"\",\n    \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "70d07973-419f-4fa5-a3b1-3c9159a52d50",
									"name": "Create Definition",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "360"
										},
										{
											"key": "ETag",
											"value": "W/\"168-77DVtKPMBj/1pjavqGoYfqeQVgc\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\",\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"meta\": null,\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-10-06T23:44:16.311Z\",\n        \"modified_on\": \"2024-10-06T23:44:16.311Z\",\n        \"deleted_on\": null,\n        \"version\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Create Definition-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e8caa40-91d9-41d9-8ee9-8c24032afa17",
										"exec": [
											"try {",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", () => {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code name has string\", function () {",
											"        pm.response.to.have.status(\"Bad Request\");",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes(\"Tenant ID must be a valid UUID\")",
											"    })",
											"",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4252280c-3fe9-40c0-8468-c0be97ba6f02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000@@@@@@"
										}
									]
								}
							},
							"response": [
								{
									"id": "d58cc044-45ba-4209-85b4-d2b7e7fcbf09",
									"name": "Create Definition",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "360"
										},
										{
											"key": "ETag",
											"value": "W/\"168-77DVtKPMBj/1pjavqGoYfqeQVgc\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\",\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"meta\": null,\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-10-06T23:44:16.311Z\",\n        \"modified_on\": \"2024-10-06T23:44:16.311Z\",\n        \"deleted_on\": null,\n        \"version\": 1\n    }\n}"
								}
							]
						}
					],
					"id": "dd38f179-8074-42d5-b4d7-74587f780b35"
				},
				{
					"name": "Update Definition",
					"item": [
						{
							"name": "Update Definition",
							"id": "d2570c0c-01a9-42b9-bfed-a69b22ad9dcd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionIdd",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionIdd"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionIdd",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "f13940bf-5373-4f8d-9a4e-c791dbcd7d31",
									"name": "Update Definition",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "131"
										},
										{
											"key": "ETag",
											"value": "W/\"83-eXmK1GMQp9dTHQ08p5V7ftyn0ng\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Definition-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8402dfa3-04f6-45e4-855c-12749124024c",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4f4e5006-8e69-45cf-aa0f-4e2ce727a233",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-0000000@@@@@"
										},
										{
											"key": "definitionId",
											"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
										}
									]
								}
							},
							"response": [
								{
									"id": "2330570b-cfe5-4843-bbc4-ddcb321b2cb4",
									"name": "Update Definition",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "131"
										},
										{
											"key": "ETag",
											"value": "W/\"83-eXmK1GMQp9dTHQ08p5V7ftyn0ng\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Definition-Empty Tenant Id field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d739cca2-075f-4faf-a1aa-38c6250088aa",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "86164f3b-f099-4d5a-9ec6-8c346e636e0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": ""
										},
										{
											"key": "definitionId",
											"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
										}
									]
								}
							},
							"response": [
								{
									"id": "8468722f-ddba-43bc-9229-03722a446319",
									"name": "Update Definition",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "131"
										},
										{
											"key": "ETag",
											"value": "W/\"83-eXmK1GMQp9dTHQ08p5V7ftyn0ng\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Definition-Empty definition Id field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dda51d05-3ca0-4891-ab95-fb76fb348fbb",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Definition ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d1fd1a8c-44e0-4fe9-b40a-2321da5574c9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "839a02f5-2b7a-4a3b-a6cf-a3a3cfd74e3e",
									"name": "Update Definition",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "131"
										},
										{
											"key": "ETag",
											"value": "W/\"83-eXmK1GMQp9dTHQ08p5V7ftyn0ng\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Definition-Invalid definition Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c852a84a-075c-4774-9c6e-fa2576fe4497",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes('not found')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e13f7316-6e9e-45f8-800a-af5e046bce5b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "01926438-2db9-7ccd-88ef-fb76284a72f4"
										}
									]
								}
							},
							"response": [
								{
									"id": "cff80062-1613-4a6b-804d-0e52dd3e9ba5",
									"name": "Update Definition",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "131"
										},
										{
											"key": "ETag",
											"value": "W/\"83-eXmK1GMQp9dTHQ08p5V7ftyn0ng\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Definition-Empty payload fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee80694c-606a-4e4f-a79f-e98d3ec2e6be",
										"exec": [
											"try {",
											"    const { message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", () => {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Status code name has string\", function () {",
											"        pm.response.to.have.status(\"Bad Request\");",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes(\"slug should not be empty\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes(\"name should not be empty\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes(\"description should not be empty\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error)",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b1b7476f-1847-4e35-b378-a7961f243471",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"\",\n    \"name\": \"\",\n    \"description\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
										}
									]
								}
							},
							"response": [
								{
									"id": "eafe9afd-a5e7-45c6-97de-b42189ae6664",
									"name": "Update Definition",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"slug\": \"kyc\",\n    \"name\": \"KYC\",\n    \"description\": \"KYC definitions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "131"
										},
										{
											"key": "ETag",
											"value": "W/\"83-eXmK1GMQp9dTHQ08p5V7ftyn0ng\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:44:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"01926438-2db9-7ccd-88ef-fb76284a72f5\",\n        \"slug\": \"kyc\",\n        \"name\": \"KYC\",\n        \"description\": \"KYC definitions\"\n    }\n}"
								}
							]
						}
					],
					"id": "64384048-6097-4c55-8df3-b1c691f21069"
				},
				{
					"name": "Delete Definition",
					"item": [
						{
							"name": "Delete Definition",
							"id": "cab13fb1-1922-4e5e-b285-77219ff2c4e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionIdd",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionIdd"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionIdd",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Definition-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ed3ebe0-bc08-47fa-9dac-0ddc50df05af",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "fbbcda7e-8e24-4129-87a8-dcb32c92e34f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": ""
										},
										{
											"key": "definitionId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Definition-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59847670-ba04-4b90-ac26-457e8a01147c",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1d14560a-a631-4193-9493-c1f371bed69b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@@"
										},
										{
											"key": "definitionId",
											"value": "01926438-2db9-7ccd-88ef-fb76284a72f5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Definition-Invalid Definition Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a925d24a-ccbb-4904-af75-897437c775c9",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes('not found')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "eeba9a9c-1c3c-4fc5-a1c9-a3985870856f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "01926438-2db9-7ccd-88ef-fb76284a72f1"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "c0cb7226-4ef9-424c-82c7-a3be90476db4"
				},
				{
					"name": "Set Definition Schema",
					"item": [
						{
							"name": "Set Definition Schema",
							"id": "b5770815-8f74-4607-b499-f943c5a7b335",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"slug\": \"name\",\n        \"name\": \"Name\",\n        \"options\": null,\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 1,\n        \"storage_strategy\": \"plain\"\n    },\n    {\n        \"slug\": \"gender\",\n        \"name\": \"Gender\",\n        \"options\": [\"male\", \"female\"],\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 2,\n        \"storage_strategy\": \"plain\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId/schemass",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId",
										"schemass"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
										}
									]
								}
							},
							"response": [
								{
									"id": "f3791435-9601-4eee-a0a5-c51754c464b5",
									"name": "Set Definition Schema",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"slug\": \"name\",\n        \"name\": \"Name\",\n        \"options\": null,\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 1,\n        \"storage_strategy\": \"plain\"\n    },\n    {\n        \"slug\": \"gender\",\n        \"name\": \"Gender\",\n        \"options\": [\"male\", \"female\"],\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 2,\n        \"storage_strategy\": \"plain\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId/schemas",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId",
												"schemas"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "354"
										},
										{
											"key": "ETag",
											"value": "W/\"162-Kby4Kg01k7AZCaJYdq3/FIXYKIc\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:49:57 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"slug\": \"name\",\n            \"name\": \"Name\",\n            \"options\": null,\n            \"version\": 1,\n            \"type\": \"text\",\n            \"default\": null,\n            \"enabled\": true,\n            \"required\": true,\n            \"order\": 1,\n            \"storage_strategy\": \"plain\"\n        },\n        {\n            \"slug\": \"gender\",\n            \"name\": \"Gender\",\n            \"options\": [\n                \"male\",\n                \"female\"\n            ],\n            \"version\": 1,\n            \"type\": \"text\",\n            \"default\": null,\n            \"enabled\": true,\n            \"required\": true,\n            \"order\": 2,\n            \"storage_strategy\": \"plain\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Set Definition Schema-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "35c232f7-a136-4c13-af84-73d3f0598b15",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7e1a0b5a-19ed-4f2a-9b3d-b41259aa0801",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"slug\": \"\",\n        \"name\": \"\",\n        \"options\": null,\n        \"version\": 1,\n        \"type\": \"\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 1,\n        \"storage_strategy\": \"\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId/schemas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId",
										"schemas"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
										}
									]
								}
							},
							"response": [
								{
									"id": "c29f648e-6b18-47f3-890d-6e416cc2e279",
									"name": "Set Definition Schema",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"slug\": \"name\",\n        \"name\": \"Name\",\n        \"options\": null,\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 1,\n        \"storage_strategy\": \"plain\"\n    },\n    {\n        \"slug\": \"gender\",\n        \"name\": \"Gender\",\n        \"options\": [\"male\", \"female\"],\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 2,\n        \"storage_strategy\": \"plain\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId/schemas",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId",
												"schemas"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "354"
										},
										{
											"key": "ETag",
											"value": "W/\"162-Kby4Kg01k7AZCaJYdq3/FIXYKIc\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:49:57 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"slug\": \"name\",\n            \"name\": \"Name\",\n            \"options\": null,\n            \"version\": 1,\n            \"type\": \"text\",\n            \"default\": null,\n            \"enabled\": true,\n            \"required\": true,\n            \"order\": 1,\n            \"storage_strategy\": \"plain\"\n        },\n        {\n            \"slug\": \"gender\",\n            \"name\": \"Gender\",\n            \"options\": [\n                \"male\",\n                \"female\"\n            ],\n            \"version\": 1,\n            \"type\": \"text\",\n            \"default\": null,\n            \"enabled\": true,\n            \"required\": true,\n            \"order\": 2,\n            \"storage_strategy\": \"plain\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Set Definition Schema-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33909ca0-62dc-47ef-88c4-8b27dc8b750f",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b0ab99ce-27c3-4c4c-b27e-33bd31202965",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"slug\": \"name\",\n        \"name\": \"Name\",\n        \"options\": null,\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 1,\n        \"storage_strategy\": \"plain\"\n    },\n    {\n        \"slug\": \"gender\",\n        \"name\": \"Gender\",\n        \"options\": [\"male\", \"female\"],\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 2,\n        \"storage_strategy\": \"plain\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId/schemas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId",
										"schemas"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@@"
										},
										{
											"key": "definitionId",
											"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
										}
									]
								}
							},
							"response": [
								{
									"id": "8ea14e87-f3c8-4ad9-9e6a-29449aad6c6a",
									"name": "Set Definition Schema",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"slug\": \"name\",\n        \"name\": \"Name\",\n        \"options\": null,\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 1,\n        \"storage_strategy\": \"plain\"\n    },\n    {\n        \"slug\": \"gender\",\n        \"name\": \"Gender\",\n        \"options\": [\"male\", \"female\"],\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 2,\n        \"storage_strategy\": \"plain\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId/schemas",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId",
												"schemas"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "354"
										},
										{
											"key": "ETag",
											"value": "W/\"162-Kby4Kg01k7AZCaJYdq3/FIXYKIc\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:49:57 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"slug\": \"name\",\n            \"name\": \"Name\",\n            \"options\": null,\n            \"version\": 1,\n            \"type\": \"text\",\n            \"default\": null,\n            \"enabled\": true,\n            \"required\": true,\n            \"order\": 1,\n            \"storage_strategy\": \"plain\"\n        },\n        {\n            \"slug\": \"gender\",\n            \"name\": \"Gender\",\n            \"options\": [\n                \"male\",\n                \"female\"\n            ],\n            \"version\": 1,\n            \"type\": \"text\",\n            \"default\": null,\n            \"enabled\": true,\n            \"required\": true,\n            \"order\": 2,\n            \"storage_strategy\": \"plain\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Set Definition Schema-Invalid Definition ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53c81997-678a-4993-b055-05c14a6d1987",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).includes('not found')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e74121e3-789f-4fb3-aade-26fbf3b65bce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"slug\": \"name\",\n        \"name\": \"Name\",\n        \"options\": null,\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 1,\n        \"storage_strategy\": \"plain\"\n    },\n    {\n        \"slug\": \"gender\",\n        \"name\": \"Gender\",\n        \"options\": [\"male\", \"female\"],\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 2,\n        \"storage_strategy\": \"plain\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId/schemas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"definitions",
										":definitionId",
										"schemas"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "definitionId",
											"value": "01923359-cd8b-755b-862f-22b00cdce2e2"
										}
									]
								}
							},
							"response": [
								{
									"id": "97de1b5f-4036-4cfc-97bb-44130bf2c9dc",
									"name": "Set Definition Schema",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"slug\": \"name\",\n        \"name\": \"Name\",\n        \"options\": null,\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 1,\n        \"storage_strategy\": \"plain\"\n    },\n    {\n        \"slug\": \"gender\",\n        \"name\": \"Gender\",\n        \"options\": [\"male\", \"female\"],\n        \"version\": 1,\n        \"type\": \"text\",\n        \"default\": null,\n        \"enabled\": true,\n        \"required\": true,\n        \"order\": 2,\n        \"storage_strategy\": \"plain\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/definitions/:definitionId/schemas",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"definitions",
												":definitionId",
												"schemas"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "definitionId",
													"value": "01923359-cd8b-755b-862f-22b00cdce2e8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "354"
										},
										{
											"key": "ETag",
											"value": "W/\"162-Kby4Kg01k7AZCaJYdq3/FIXYKIc\""
										},
										{
											"key": "Date",
											"value": "Sun, 06 Oct 2024 23:49:57 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"slug\": \"name\",\n            \"name\": \"Name\",\n            \"options\": null,\n            \"version\": 1,\n            \"type\": \"text\",\n            \"default\": null,\n            \"enabled\": true,\n            \"required\": true,\n            \"order\": 1,\n            \"storage_strategy\": \"plain\"\n        },\n        {\n            \"slug\": \"gender\",\n            \"name\": \"Gender\",\n            \"options\": [\n                \"male\",\n                \"female\"\n            ],\n            \"version\": 1,\n            \"type\": \"text\",\n            \"default\": null,\n            \"enabled\": true,\n            \"required\": true,\n            \"order\": 2,\n            \"storage_strategy\": \"plain\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "264129d1-7d05-4cca-8655-d8ab2a061f98"
				}
			],
			"id": "74f60c46-9920-491d-9dec-55887fd83678"
		},
		{
			"name": "Settings",
			"item": [
				{
					"name": "Create settings",
					"item": [
						{
							"name": "Create Settings",
							"id": "8d2e7bc5-ba53-4471-bd8e-8468540caf55",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"api-key\",\n    \"value\": \"ola ma\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/tenants/settingss"
							},
							"response": []
						},
						{
							"name": "Create Settings-Empty fields",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "758178cb-1de2-4446-9689-4c52d6095756",
										"exec": [
											"pm.environment.set('origin', \"https://northquestfinance.com\")",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "069768cb-b5c3-4c9b-b820-d6d56093aa33",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "origin",
										"value": "{{origin}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"\",\n    \"value\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/tenants/settings"
							},
							"response": []
						},
						{
							"name": "Create Settings-Invalid Slug",
							"id": "de61ed4f-0c09-48ff-aa57-5ca9960b21bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "origin",
										"value": "{{origin}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"slug\": \"api-key\",\n    \"value\": \"ola ma\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/tenants/settings"
							},
							"response": []
						}
					],
					"id": "c8b57308-39f1-4e4f-9996-3d4056942783"
				},
				{
					"name": "Get Settings",
					"item": [
						{
							"name": "Get Settings",
							"id": "ea8e996b-f546-4873-b39d-5d563cab14aa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/tenants/settings"
							},
							"response": [
								{
									"id": "80cfd9b7-8dbb-4b8e-90e8-9571a95f1496",
									"name": "Create Profile",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"personal\",\n    \"name\": \"wunmi\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"nin\": \"1234567890\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/profiles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 27 Sep 2024 13:57:44 GMT",
											"uuid": "071d6e7c-b61c-4eaa-8164-0fc75e31313b"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"uuid": "5070f311-256e-4659-bbb0-5af2689f44bf"
										},
										{
											"key": "Content-Length",
											"value": "445",
											"uuid": "8d6830a9-dbc8-4d37-a1a9-4fd0f2ab19c6"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"uuid": "29536e6b-c42d-4bf9-83f7-f119f4d5c10d"
										},
										{
											"key": "X-Powered-By",
											"value": "Express",
											"uuid": "e2b342ea-1136-499a-b5b0-c814af7d1daa"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"uuid": "44fd61c2-e945-4e0d-8027-d61e87cb9090"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100",
											"uuid": "272bf6ad-40cf-4ef1-849f-67e4b945f658"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99",
											"uuid": "cf87039b-0596-45e6-a73c-ab4044042003"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1",
											"uuid": "833027e3-d756-494d-87d8-8437902f81e4"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-FAijTRuS60lyD9Xj8CumelVWbXU\"",
											"uuid": "213c28f6-be58-443c-86c7-ac7b5abb3819"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"meta\": {\n            \"first_name\": \"\",\n            \"last_name\": \"\",\n            \"nin\": \"1234567890\"\n        },\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"wunmi\",\n        \"type\": \"personal\",\n        \"primary_user_id\": \"019233c3-ec4c-7ffa-922e-94bfe8e3b407\",\n        \"id\": \"019233c5-f357-7ffa-922e-9ff5318f8678\",\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-09-27T13:57:43.894Z\",\n        \"modified_on\": \"2024-09-27T13:57:43.894Z\",\n        \"deleted_on\": null,\n        \"status\": \"active\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Settings-No auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "caac00ab-1f1f-4e79-87d1-266388b0ae9c",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7a7d1386-6682-41ca-9802-604780900c32",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "origin",
										"value": "{{origin}}",
										"type": "text"
									}
								],
								"url": "{{base_url}}/tenants/settings"
							},
							"response": [
								{
									"id": "5fc6c0ed-64ea-4f29-a259-08bccd8cc805",
									"name": "Create Profile",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"personal\",\n    \"name\": \"wunmi\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"nin\": \"1234567890\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/profiles"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 27 Sep 2024 13:57:44 GMT",
											"uuid": "071d6e7c-b61c-4eaa-8164-0fc75e31313b"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"uuid": "5070f311-256e-4659-bbb0-5af2689f44bf"
										},
										{
											"key": "Content-Length",
											"value": "445",
											"uuid": "8d6830a9-dbc8-4d37-a1a9-4fd0f2ab19c6"
										},
										{
											"key": "Connection",
											"value": "keep-alive",
											"uuid": "29536e6b-c42d-4bf9-83f7-f119f4d5c10d"
										},
										{
											"key": "X-Powered-By",
											"value": "Express",
											"uuid": "e2b342ea-1136-499a-b5b0-c814af7d1daa"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"uuid": "44fd61c2-e945-4e0d-8027-d61e87cb9090"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100",
											"uuid": "272bf6ad-40cf-4ef1-849f-67e4b945f658"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99",
											"uuid": "cf87039b-0596-45e6-a73c-ab4044042003"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1",
											"uuid": "833027e3-d756-494d-87d8-8437902f81e4"
										},
										{
											"key": "ETag",
											"value": "W/\"1bd-FAijTRuS60lyD9Xj8CumelVWbXU\"",
											"uuid": "213c28f6-be58-443c-86c7-ac7b5abb3819"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"meta\": {\n            \"first_name\": \"\",\n            \"last_name\": \"\",\n            \"nin\": \"1234567890\"\n        },\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"wunmi\",\n        \"type\": \"personal\",\n        \"primary_user_id\": \"019233c3-ec4c-7ffa-922e-94bfe8e3b407\",\n        \"id\": \"019233c5-f357-7ffa-922e-9ff5318f8678\",\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-09-27T13:57:43.894Z\",\n        \"modified_on\": \"2024-09-27T13:57:43.894Z\",\n        \"deleted_on\": null,\n        \"status\": \"active\"\n    }\n}"
								}
							]
						}
					],
					"id": "f62a6c75-5460-4d3c-8353-5a9eae8abbaf"
				}
			],
			"id": "5e82e55d-5cc5-4b0f-a56f-e1c6ac173450"
		},
		{
			"name": "Documents",
			"item": [
				{
					"name": "List Documents",
					"item": [
						{
							"name": "List Documents",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c837c08-b227-425b-84f8-9c5508165394",
										"exec": [
											"try {",
											"    const { status, data } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"array\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "eba2b3d4-51d8-4a0b-b620-66129b967815",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/documents",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"documents"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Documents--No auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22ad20ad-f8e9-467c-bc08-41eaf64b2c85",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b56851fc-0cd8-4d80-898c-cc1e3f4ca4a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/documents",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"documents"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "873b8e62-eb83-4db8-bd15-00c97886048f"
				},
				{
					"name": "Set Document",
					"item": [
						{
							"name": "Set Document",
							"id": "f5fca962-f71f-450b-9522-a41fca1aeec0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type_id\": \"\",\n    \"url\": \"\",\n    \"profile_id\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/documents",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"documents"
									],
									"variable": [
										{
											"id": "6ea2d2dd-147d-4a19-864b-9889d1758f09",
											"key": "tenantId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Document-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0679b94-ac02-4364-89c9-105d1317fe3c",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"array\") && pm.expect(message).to.include('type_id must be a UUID')",
											"        pm.expect(message).to.be.an(\"array\") && pm.expect(message).to.include('profile_id must be a UUID')",
											"        pm.expect(message).to.be.an(\"array\") && pm.expect(message).to.include('url must be a URL address')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "2ecd1d0c-3aec-4538-a4c3-68dea8f923c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type_id\": \"\",\n    \"url\": \"\",\n    \"profile_id\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/documents",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"documents"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Document-Invalid type id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9bef2c8a-59c2-478c-8539-07f36fcddcc0",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"array\") && pm.expect(message).to.include('type_id must be a UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "67056621-5a8f-4f51-b449-a8ed52cab308",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type_id\": \"ooeo\",\n    \"url\": \"https://google.com\",\n    \"profile_id\": \"00000000-0000-0000-0000-000000000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/documents",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"documents"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Document-Invalid Profile Id",
							"id": "e1c96c67-503c-449a-893a-b2f744bef513",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"url\": \"https://google.com\",\n    \"profile_id\": \"00000000-0000-0000-0000-000000000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/documents",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"documents"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "36589fd5-57a1-4369-94ef-2267c55d4674"
				}
			],
			"id": "5a9246b9-936b-418e-a86a-e2842ae3b61b"
		},
		{
			"name": "Document Types",
			"item": [
				{
					"name": "Create Document Type",
					"item": [
						{
							"name": "Create Document Type",
							"id": "643b378f-f17c-4392-97ea-52b9ad95263c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proof of address\",\n    \"description\": \"Proof of address\",\n    \"enabled\": true,\n    \"required\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-typess",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-typess"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "b0218bdf-fea7-41aa-9a5d-908e6edd2a50",
									"name": "Create Document Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proof of address\",\n    \"description\": \"Proof of address\",\n    \"enabled\": true,\n    \"required\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-YX3rqbYqKs0/11tRIxkF0BAgF4Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:32:42 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true,\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"deleted_on\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Document Type-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29973437-621e-4542-88e7-28798a1ade8d",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"array\")",
											"        pm.expect(message).to.include('name should not be empty')",
											"        pm.expect(message).to.include('enabled must be a boolean value')",
											"        pm.expect(message).to.include('required must be a boolean value')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a24c5d9a-bb67-483d-966d-0b47ad0b4ee1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"description\": \"\",\n    \"enabled\": \"\",\n    \"required\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "a0eeb311-dfd5-4433-a4b7-871da5fdc369",
									"name": "Create Document Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proof of address\",\n    \"description\": \"Proof of address\",\n    \"enabled\": true,\n    \"required\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-YX3rqbYqKs0/11tRIxkF0BAgF4Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:32:42 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true,\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"deleted_on\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Document Type-Existing name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83f32ce2-0de3-4c9f-826a-f3b43047744f",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.include('already exists')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "80294195-5c6c-476f-a5a9-b9fe435fb0cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proof of address\",\n    \"description\": \"Proof of address\",\n    \"enabled\": true,\n    \"required\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "3cf23d65-4627-49ef-af47-30edbb93abbb",
									"name": "Create Document Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proof of address\",\n    \"description\": \"Proof of address\",\n    \"enabled\": true,\n    \"required\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-YX3rqbYqKs0/11tRIxkF0BAgF4Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:32:42 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true,\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"deleted_on\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Document Type-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbfa3bdf-de1c-44c3-b447-24e4ef905a6d",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "8ef181e8-1f6b-44af-914c-f968b3e455f3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Proof of address\",\n    \"description\": \"Proof of address\",\n    \"enabled\": true,\n    \"required\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@@"
										}
									]
								}
							},
							"response": [
								{
									"id": "6a9b2809-d0f1-458c-b7ac-ced7167ef9eb",
									"name": "Create Document Type",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Proof of address\",\n    \"description\": \"Proof of address\",\n    \"enabled\": true,\n    \"required\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-YX3rqbYqKs0/11tRIxkF0BAgF4Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:32:42 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true,\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_by\": null,\n        \"modified_by\": null,\n        \"deleted_by\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"deleted_on\": null\n    }\n}"
								}
							]
						}
					],
					"id": "a6ae86c6-bdce-49da-a03e-e85eca575bd2"
				},
				{
					"name": "List Document Types",
					"item": [
						{
							"name": "List Document Types",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf889e55-0fcc-45ff-80c3-518da3591f13",
										"exec": [
											"try {",
											"    const { status, data } = pm.response.json()",
											"    pm.environment.set(\"fetchedDocumentTypeId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"array\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "54ecffff-97b8-4636-942c-acc944adcdac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "43454255-2f26-43e3-bf4a-fd3ea1a266e5",
									"name": "List Document Types",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-+6P+ihjYVZpYBUBZI77FoWgKQIU\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:32:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n            \"meta\": null,\n            \"created_on\": \"2024-10-14T07:32:42.240Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null,\n            \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"name\": \"Proof of address\",\n            \"description\": \"Proof of address\",\n            \"enabled\": true,\n            \"required\": true\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "List Document Types-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68d6acb3-77d6-47e5-97bd-251c5c00bc7c",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "d3a9b159-3814-4e62-acc6-8d75d90d07c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@"
										}
									]
								}
							},
							"response": [
								{
									"id": "1d9599cc-7ae4-468c-8b47-6194a18181ef",
									"name": "List Document Types",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-+6P+ihjYVZpYBUBZI77FoWgKQIU\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:32:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n            \"meta\": null,\n            \"created_on\": \"2024-10-14T07:32:42.240Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null,\n            \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"name\": \"Proof of address\",\n            \"description\": \"Proof of address\",\n            \"enabled\": true,\n            \"required\": true\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "List Document Types-No auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8471d8c-867a-4494-8f48-a5f79f2e8ace",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "1fc85e3a-a157-4d85-9bfa-7e2826ca71cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": [
								{
									"id": "6cfce84e-4d43-400e-bb02-8a441f4ea69e",
									"name": "List Document Types",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "ETag",
											"value": "W/\"17e-+6P+ihjYVZpYBUBZI77FoWgKQIU\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:32:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n            \"meta\": null,\n            \"created_on\": \"2024-10-14T07:32:42.240Z\",\n            \"created_by\": null,\n            \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n            \"modified_by\": null,\n            \"deleted_on\": null,\n            \"deleted_by\": null,\n            \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n            \"name\": \"Proof of address\",\n            \"description\": \"Proof of address\",\n            \"enabled\": true,\n            \"required\": true\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "07f39c71-5067-4275-acaa-cba28d48fe6c"
				},
				{
					"name": "Get Document Type",
					"item": [
						{
							"name": "Get Document Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1509592e-c176-40be-b618-fc85ab03cb03",
										"exec": [
											"try {",
											"    const { status, data } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"object\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b4d31a24-c17c-46cc-adc7-61f150070e3e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types",
										":documentTypeId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "documentTypeId",
											"value": "{{fetchedDocumentTypeId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "da7ebcc7-7e5c-4b03-a114-10e081a82566",
									"name": "Get Document Type",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types",
												":documentTypeId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "documentTypeId",
													"value": "019289f1-8d87-766b-8bff-1ee5c22d9add"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-Av4OCEFAyHomstk0t9e8nF350DU\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:34:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Get Document Type-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a8f8b9e-b2e4-48ec-8430-028fabbe3f39",
										"exec": [
											"try {",
											"    const { status, message } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.eql(\"Tenant ID must be a valid UUID\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "715f2148-8dda-4206-ac0a-bdee1964466f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types",
										":documentTypeId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": ""
										},
										{
											"key": "documentTypeId",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "5e255a9a-40a9-4a01-a3ee-4994cd844a45",
									"name": "Get Document Type",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types",
												":documentTypeId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "documentTypeId",
													"value": "019289f1-8d87-766b-8bff-1ee5c22d9add"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-Av4OCEFAyHomstk0t9e8nF350DU\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:34:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Get Document Type-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7565e880-1716-40f8-8e05-c52cb9b15d4c",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "471a896f-6338-4c71-bb50-abe2a42e314a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types",
										":documentTypeId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@@"
										},
										{
											"key": "documentTypeId",
											"value": "019289f1-8d87-766b-8bff-1ee5c22d9add"
										}
									]
								}
							},
							"response": [
								{
									"id": "3710ba37-60dd-48cb-a78a-278c33a7868b",
									"name": "Get Document Type",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types",
												":documentTypeId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "documentTypeId",
													"value": "019289f1-8d87-766b-8bff-1ee5c22d9add"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-Av4OCEFAyHomstk0t9e8nF350DU\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:34:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Get Document Type-Invalid Document Type Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2579355-d8d6-46ce-8d97-29776dd6b417",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "75cfab60-f325-4cd5-ace6-3288197a0ba6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types",
										":documentTypeId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "documentTypeId",
											"value": "@@"
										}
									]
								}
							},
							"response": [
								{
									"id": "032e246a-84f3-45ba-86a3-833b6f6bc648",
									"name": "Get Document Type",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types",
												":documentTypeId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "documentTypeId",
													"value": "019289f1-8d87-766b-8bff-1ee5c22d9add"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-Av4OCEFAyHomstk0t9e8nF350DU\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:34:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Get Document Type-No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4b17f51-09f3-47ef-bf92-88fb8e4cc15d",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "61b098f8-885d-4eeb-a46f-8e16e663472b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"document-types",
										":documentTypeId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "documentTypeId",
											"value": "019289f1-8d87-766b-8bff-1ee5c22d9add"
										}
									]
								}
							},
							"response": [
								{
									"id": "13a65f60-f035-43b5-96d5-764100757644",
									"name": "Get Document Type",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/tenants/:tenantId/document-types/:documentTypeId",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"tenants",
												":tenantId",
												"document-types",
												":documentTypeId"
											],
											"variable": [
												{
													"key": "tenantId",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "documentTypeId",
													"value": "019289f1-8d87-766b-8bff-1ee5c22d9add"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "100"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "99"
										},
										{
											"key": "X-RateLimit-Reset",
											"value": "1"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "380"
										},
										{
											"key": "ETag",
											"value": "W/\"17c-Av4OCEFAyHomstk0t9e8nF350DU\""
										},
										{
											"key": "Date",
											"value": "Mon, 14 Oct 2024 07:34:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": \"019289f1-8d87-766b-8bff-1ee5c22d9add\",\n        \"meta\": null,\n        \"created_on\": \"2024-10-14T07:32:42.240Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2024-10-14T07:32:42.240Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_by\": null,\n        \"tenant_id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Proof of address\",\n        \"description\": \"Proof of address\",\n        \"enabled\": true,\n        \"required\": true\n    }\n}"
								}
							]
						}
					],
					"id": "4139b972-3f12-45bd-a007-44f4564c987b"
				}
			],
			"id": "c1dd9504-1f5e-4d74-9ec5-4ebe0afdbe2e"
		},
		{
			"name": "Tiers",
			"item": [
				{
					"name": "Create Tier",
					"item": [
						{
							"name": "Create Tier",
							"id": "214bc0aa-b94d-4d07-a2e3-7e337d1dd0e6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Tier 1\",\n    \"description\": \"Tier 1\",\n    \"profile_type\": \"personal\",\n    \"level\": 1,\n    \"enabled\": true,\n    \"single_sending_limit\": 0,\n    \"single_receiving_limit\": 0,\n    \"period_sending_limit\": 0,\n    \"period_sending_limit_time_unit\": \"day\",\n    \"period_receiving_limit\": 0,\n    \"period_receiving_limit_time_unit\": \"day\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tierss",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tierss"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tier-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "377df2e5-6be9-4b42-9f7b-9a58f2cd4d06",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"array\");",
											"",
											"        pm.expect(message).to.include('name should not be empty');",
											"        pm.expect(message).to.include('description should not be empty');",
											"        pm.expect(message).to.include('profile_type must be one of the following values: personal, business');",
											"        pm.expect(message).to.include('profile_type should not be empty');",
											"        pm.expect(message).to.include('level should not be empty');",
											"        pm.expect(message).to.include('level must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('single_sending_limit must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('single_receiving_limit must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('period_sending_limit must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('period_receiving_limit must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('enabled must be a boolean value');",
											"    });",
											"",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b365423f-12d0-4cfd-bf29-60df85279697",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"description\": \"\",\n    \"profile_type\": \"\",\n    \"level\": \"\",\n    \"enabled\": \"\",\n    \"single_sending_limit\": \"\",\n    \"single_receiving_limit\": \"\",\n    \"period_sending_limit\": \"\",\n    \"period_sending_limit_time_unit\": \"\",\n    \"period_receiving_limit\": \"\",\n    \"period_receiving_limit_time_unit\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tier-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70fc140c-59e8-4e9e-bad2-54a458defe40",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "c94df088-9049-46ca-8bbe-01be819a473b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Tier 1\",\n    \"description\": \"Tier 1\",\n    \"profile_type\": \"personal\",\n    \"level\": 1,\n    \"enabled\": true,\n    \"single_sending_limit\": 0,\n    \"single_receiving_limit\": 0,\n    \"period_sending_limit\": 0,\n    \"period_sending_limit_time_unit\": \"day\",\n    \"period_receiving_limit\": 0,\n    \"period_receiving_limit_time_unit\": \"day\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@@"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Tier-Already existing tier",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c407c63-edc8-4a67-bb89-a0cc44787f1d",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql(\"Tier type Tier 1 or level 1 already exists\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bca6dfa9-a178-44ea-9f24-2ad8aa3bfb07",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Tier 1\",\n    \"description\": \"Tier 1\",\n    \"profile_type\": \"personal\",\n    \"level\": 1,\n    \"enabled\": true,\n    \"single_sending_limit\": 0,\n    \"single_receiving_limit\": 0,\n    \"period_sending_limit\": 0,\n    \"period_sending_limit_time_unit\": \"day\",\n    \"period_receiving_limit\": 0,\n    \"period_receiving_limit_time_unit\": \"day\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "3390e7f9-c229-4900-bd72-a70c2a318470"
				},
				{
					"name": "List Tiers",
					"item": [
						{
							"name": "List Tiers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "261db458-15ca-4e79-9aa3-49ddc7f5a06b",
										"exec": [
											"try {",
											"    const { status, data } = pm.response.json()",
											"    pm.environment.set(\"fetchedTierId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"array\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "3e148e53-bb1a-4ed1-9240-ff5eec1b647a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJSUzI1NiIsImNhdCI6ImNsX0I3ZDRQRDExMUFBQSIsImtpZCI6Imluc18ybUVZVTZZd01zTWNlbnFtcnBua1VudXBlQmsiLCJ0eXAiOiJKV1QifQ.eyJhenAiOiJodHRwczovL2tpdWItZnJvbnRlbmQudmVyY2VsLmFwcCIsImV4cCI6MTcyODk5MzQ2MCwiaWF0IjoxNzI4OTkzNDAwLCJpc3MiOiJodHRwczovL2FkdmFuY2VkLXJvdWdoeS05My5jbGVyay5hY2NvdW50cy5kZXYiLCJqdGkiOiJhMjA1OTFiNmY5ODFhYjM2MzczYyIsIm1ldGFkYXRhIjp7Im9uYm9hcmRpbmciOnRydWV9LCJuYmYiOjE3Mjg5OTMzOTAsInNpZCI6InNlc3NfMm5JNURWQnRKaG12ckNNU1IxS25VT0ZORWN4Iiwic3ViIjoidXNlcl8ybkNUTHkxbFE5clR6Y1E3a09KSjBHWmpuZmgifQ.GiAulPSsCIC-BmLNoM4sVTEv6r2ahbHepfXl7Lpbir7fnemmff9Oyf91LnNuu4tGay1Z_JoLG8qAwkRySLc4fW1uQjaAV7uTN-Z7bw4mcp49qlHsEg2nDsmc-ujvPf4S8hnXn3EHSvRP71Uggvhqj5Bn8-hw93D-P-dp7w6N1sG9Hr2QepQD9CGPmL0C_QOauuHlxRhfRfDKKRmnYzGF5i0bDtv2zuO4k17vuA9xuefnqM_Nrv2vi3wRuZr8M8NRH0nLU_eVxYXlJ4Encpph5hS8rrZ5tiTltw1_-2Vx-K93VEyWTDI7NBE_DywgHQC52mIBQ2z6AvpgDjw167mSCQ"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImNhdCI6ImNsX0I3ZDRQRDExMUFBQSIsImtpZCI6Imluc18ybUVZVTZZd01zTWNlbnFtcnBua1VudXBlQmsiLCJ0eXAiOiJKV1QifQ.eyJhenAiOiJodHRwczovL2tpdWItZnJvbnRlbmQudmVyY2VsLmFwcCIsImV4cCI6MTcyODkwNzExOSwiaWF0IjoxNzI4OTA3MDU5LCJpc3MiOiJodHRwczovL2FkdmFuY2VkLXJvdWdoeS05My5jbGVyay5hY2NvdW50cy5kZXYiLCJqdGkiOiI1NjQ4YjY3NTI2ZDA5MzE0YTYwMyIsIm1ldGFkYXRhIjp7Im9uYm9hcmRpbmciOnRydWV9LCJuYmYiOjE3Mjg5MDcwNDksInNpZCI6InNlc3NfMm5JNURWQnRKaG12ckNNU1IxS25VT0ZORWN4Iiwic3ViIjoidXNlcl8ybkNUTHkxbFE5clR6Y1E3a09KSjBHWmpuZmgifQ.ko-RDk2WPeZxkwClWT05O6gRiLzyUxsqtqhm8pmsJZCMD1b6KciOdVo-XKy6U5xde8xPf28oMfRQlDONaPDOMwwYI-y314Oir8Zrl9Rd44eQURUtf_FyFx_1oqw4flmEJH_5UepjGd9ju3YzLPjaSIB7Sc6wQr3VE8mbEvMJHWlsr_d-hSe06Q6drb9IFVlLNXaM8EPhpQU3e6SgZpy8sZQVJYgDc-lC5dbTTSbGNUz0Sh_NoC8bia6mhpNkMuu6JGMfKYq_7AAs0edL_kLUa7FBuh8uPVrQLpOGckTv2dJH61d2D3HqgSEbeUKXxiEtGdPlYNf8YlInmQfp9eNAAg"
									}
								],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Tiers-No auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6152fc13-69da-4d82-8fe4-35c442a9d6c6",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "9eee451a-766d-4740-bcc4-1056575d8866",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJSUzI1NiIsImNhdCI6ImNsX0I3ZDRQRDExMUFBQSIsImtpZCI6Imluc18ybUVZVTZZd01zTWNlbnFtcnBua1VudXBlQmsiLCJ0eXAiOiJKV1QifQ.eyJhenAiOiJodHRwczovL2tpdWItZnJvbnRlbmQudmVyY2VsLmFwcCIsImV4cCI6MTcyODkwNzExOSwiaWF0IjoxNzI4OTA3MDU5LCJpc3MiOiJodHRwczovL2FkdmFuY2VkLXJvdWdoeS05My5jbGVyay5hY2NvdW50cy5kZXYiLCJqdGkiOiI1NjQ4YjY3NTI2ZDA5MzE0YTYwMyIsIm1ldGFkYXRhIjp7Im9uYm9hcmRpbmciOnRydWV9LCJuYmYiOjE3Mjg5MDcwNDksInNpZCI6InNlc3NfMm5JNURWQnRKaG12ckNNU1IxS25VT0ZORWN4Iiwic3ViIjoidXNlcl8ybkNUTHkxbFE5clR6Y1E3a09KSjBHWmpuZmgifQ.ko-RDk2WPeZxkwClWT05O6gRiLzyUxsqtqhm8pmsJZCMD1b6KciOdVo-XKy6U5xde8xPf28oMfRQlDONaPDOMwwYI-y314Oir8Zrl9Rd44eQURUtf_FyFx_1oqw4flmEJH_5UepjGd9ju3YzLPjaSIB7Sc6wQr3VE8mbEvMJHWlsr_d-hSe06Q6drb9IFVlLNXaM8EPhpQU3e6SgZpy8sZQVJYgDc-lC5dbTTSbGNUz0Sh_NoC8bia6mhpNkMuu6JGMfKYq_7AAs0edL_kLUa7FBuh8uPVrQLpOGckTv2dJH61d2D3HqgSEbeUKXxiEtGdPlYNf8YlInmQfp9eNAAg"
									}
								],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "10474abe-f100-4408-b483-67c2f967cde8"
				},
				{
					"name": "Update Tier",
					"item": [
						{
							"name": "Update Tier",
							"id": "86fef901-5112-46c4-8699-aec5fbdaabc1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Tier 1\",\n    \"description\": \"Tier 1\",\n    \"profile_type\": \"personal\",\n    \"level\": 1,\n    \"enabled\": true,\n    \"single_sending_limit\": 0,\n    \"single_receiving_limit\": 0,\n    \"period_sending_limit\": 0,\n    \"period_sending_limit_time_unit\": \"day\",\n    \"period_receiving_limit\": 0,\n    \"period_receiving_limit_time_unit\": \"day\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers/:tierIdd",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers",
										":tierIdd"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "tierIdd",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Tier-Empty fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2cd98da0-aac1-4f02-bb70-7e82897ab879",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"array\");",
											"",
											"        pm.expect(message).to.include('name should not be empty');",
											"        pm.expect(message).to.include('description should not be empty');",
											"        pm.expect(message).to.include('profile_type must be one of the following values: personal, business');",
											"        pm.expect(message).to.include('profile_type should not be empty');",
											"        pm.expect(message).to.include('level should not be empty');",
											"        pm.expect(message).to.include('level must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('single_sending_limit must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('single_receiving_limit must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('period_sending_limit must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('period_receiving_limit must be a number conforming to the specified constraints');",
											"        pm.expect(message).to.include('enabled must be a boolean value');",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "5b05d29c-8e6e-4676-941b-3fa58cb82020",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"description\": \"\",\n    \"profile_type\": \"\",\n    \"level\": \"\",\n    \"enabled\": \"\",\n    \"single_sending_limit\": \"\",\n    \"single_receiving_limit\": \"\",\n    \"period_sending_limit\": \"\",\n    \"period_sending_limit_time_unit\": \"\",\n    \"period_receiving_limit\": \"\",\n    \"period_receiving_limit_time_unit\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers/:tierId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers",
										":tierId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "tierId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Tier-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "021007a9-fbb5-4408-a56d-2508b7a85d93",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "058f024c-b4bd-433b-8a16-51ffc85ac902",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Tier 1\",\n    \"description\": \"Tier 1\",\n    \"profile_type\": \"personal\",\n    \"level\": 1,\n    \"enabled\": true,\n    \"single_sending_limit\": 0,\n    \"single_receiving_limit\": 0,\n    \"period_sending_limit\": 0,\n    \"period_sending_limit_time_unit\": \"day\",\n    \"period_receiving_limit\": 0,\n    \"period_receiving_limit_time_unit\": \"day\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers/:tierId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers",
										":tierId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@@"
										},
										{
											"key": "tierId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Tier -Invalid Tier Id",
							"id": "5af3c000-a98f-4147-a655-9741e6905f3f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Tier 1\",\n    \"description\": \"Tier 1\",\n    \"profile_type\": \"personal\",\n    \"level\": 1,\n    \"enabled\": true,\n    \"single_sending_limit\": 0,\n    \"single_receiving_limit\": 0,\n    \"period_sending_limit\": 0,\n    \"period_sending_limit_time_unit\": \"day\",\n    \"period_receiving_limit\": 0,\n    \"period_receiving_limit_time_unit\": \"day\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers/:tierId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers",
										":tierId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "tierId",
											"value": "@@"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "6559a391-3e06-4fcf-a3f2-ffba91d01a34"
				},
				{
					"name": "Delete Tier",
					"item": [
						{
							"name": "Delete Tier",
							"id": "c0891f9d-3493-48db-9374-282e817dd0b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers/:tierIdd",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers",
										":tierIdd"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "tierIdd",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Tier-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "130882b2-6d05-4f48-ba28-9df7117d1eef",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "7417cadc-12d2-4e72-ac1c-c325637dad26",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers/:tierId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers",
										":tierId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@@"
										},
										{
											"key": "tierId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Tier-Invalid tier Id",
							"id": "413810d0-1ab5-46a8-9d8c-8b7de0d50492",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/tiers/:tierId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"tiers",
										":tierId"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "tierId",
											"value": "@@"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "0963870a-dae7-4d6e-95fe-c08ec7e85d3a"
				}
			],
			"id": "08ca6899-172f-4682-8bec-67a9f4ddf08b"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "List Users",
					"item": [
						{
							"name": "List Users",
							"id": "3e700fb6-ed94-41e2-bbdc-f904a5f4001b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users"
									],
									"query": [
										{
											"key": "filter[first_name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[email]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[phone]",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Users-Invalid Tenant Id",
							"id": "a343133e-108e-4f47-860a-ba7601cb84fe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users"
									],
									"query": [
										{
											"key": "filter[first_name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[email]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[phone]",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a397b186-249e-4761-918b-3df9ac61ef7a",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Users-Filter",
							"id": "1153534b-8685-4810-a675-8521260c342d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users"
									],
									"query": [
										{
											"key": "filter[first_name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[email]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[phone]",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a397b186-249e-4761-918b-3df9ac61ef7a",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Users-No auth",
							"id": "6a0a751d-2980-4c0d-8376-cd2a653ead8f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users"
									],
									"query": [
										{
											"key": "filter[first_name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[email]",
											"value": "",
											"disabled": true
										},
										{
											"key": "filter[phone]",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "a397b186-249e-4761-918b-3df9ac61ef7a",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "23bb8add-8ac3-4409-a7f9-30372fd32c79"
				},
				{
					"name": "Update User",
					"item": [
						{
							"name": "Update User",
							"id": "fcddec1f-366c-4558-85bc-19d27612a32b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Wunmi\",\n    \"last_name\": \"Ade\",\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"phone\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users/:userId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users",
										":userId"
									],
									"variable": [
										{
											"id": "6cc1be8d-841e-46d2-a7c9-b24f5069795a",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "599bacd6-d59b-4cf4-844d-b734af7aea97",
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User-Empty fields",
							"id": "055f1842-38ae-4707-b6fd-dcb77c5eec09",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Wunmi\",\n    \"last_name\": \"Ade\",\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"phone\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users/:userId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users",
										":userId"
									],
									"variable": [
										{
											"id": "6cc1be8d-841e-46d2-a7c9-b24f5069795a",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "599bacd6-d59b-4cf4-844d-b734af7aea97",
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User-Invalid tenant Id",
							"id": "f07650e6-970d-4e2e-9fb8-87e3cdccec1e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Wunmi\",\n    \"last_name\": \"Ade\",\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"phone\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users/:userId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users",
										":userId"
									],
									"variable": [
										{
											"id": "6cc1be8d-841e-46d2-a7c9-b24f5069795a",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "599bacd6-d59b-4cf4-844d-b734af7aea97",
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User-Invalid user Id",
							"id": "f493c531-3dbc-41fb-9c36-d4f6016c3e0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Wunmi\",\n    \"last_name\": \"Ade\",\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"phone\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users/:userId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users",
										":userId"
									],
									"variable": [
										{
											"id": "6cc1be8d-841e-46d2-a7c9-b24f5069795a",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "599bacd6-d59b-4cf4-844d-b734af7aea97",
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "adc08f73-0af7-41e2-8e81-d3a290ef1c93"
				},
				{
					"name": "Delete User",
					"item": [
						{
							"name": "Delete User",
							"id": "cb255e3b-7dce-4016-b85a-a9ffb16c656c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users/:userId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users",
										":userId"
									],
									"variable": [
										{
											"id": "0faa2547-3dcc-4a8b-b39b-bb476bafb1a2",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "5cc53815-a392-41b5-962f-6138431db29a",
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User-Invalid Tenant Id",
							"id": "e52a84f7-64fa-4c2c-82bb-d013bc5c650e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users/:userId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users",
										":userId"
									],
									"variable": [
										{
											"id": "0faa2547-3dcc-4a8b-b39b-bb476bafb1a2",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "5cc53815-a392-41b5-962f-6138431db29a",
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User-Invalid User Id",
							"id": "5eb1142f-035a-46a1-ab90-d36f27b5ae9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/users/:userId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"users",
										":userId"
									],
									"variable": [
										{
											"id": "0faa2547-3dcc-4a8b-b39b-bb476bafb1a2",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "5cc53815-a392-41b5-962f-6138431db29a",
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "7ff52afc-eb86-4a0c-83cd-1457ac54a35c"
				}
			],
			"id": "9c502c40-6ece-483a-ba71-1541b3acd34c"
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "List Profiles",
					"item": [
						{
							"name": "List Profiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b480854d-cce2-442c-9c54-bece81d17fc7",
										"exec": [
											"try {",
											"    const { status, data } = pm.response.json()",
											"    pm.environment.set(\"fetchedTierId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"array\")",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "73163be1-4a99-4b16-911e-b09cc565294c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "personal",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Profiles - Individuals",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b480854d-cce2-442c-9c54-bece81d17fc7",
										"exec": [
											"try {",
											"    const { status, data } = pm.response.json()",
											"    pm.environment.set(\"fetchedTierId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"array\")",
											"    })",
											"",
											"    if (data) {",
											"        pm.test(\"Test that result is filtered to business\", () => {",
											"            pm.expect(data[0].type).to.eql(\"personal\")",
											"        })",
											"    }",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "47375d34-67ad-4e7e-b737-d6c3eb9f03b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles?filter[type]=personal",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "personal"
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Profiles - Business",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b480854d-cce2-442c-9c54-bece81d17fc7",
										"exec": [
											"try {",
											"    const { status, data } = pm.response.json()",
											"    pm.environment.set(\"fetchedTierId\", data[0].id)",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Test for valid status\", () => {",
											"        pm.expect(status).to.eql(\"success\")",
											"    })",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(data).to.be.an(\"array\")",
											"    })",
											"",
											"    if (data) {",
											"        pm.test(\"Test that result is filtered to business\", () => {",
											"            pm.expect(data[0].type).to.eql(\"business\")",
											"        })",
											"    }",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "22990d52-90a7-4c0b-a31c-2e592f92fcd7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles?filter[type]=business",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "business"
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Profiles-Invalid Tenant Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c31191e1-dae7-4451-91c8-4e030f9e7464",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Test for valid error message\", () => {",
											"        pm.expect(message).to.be.an(\"string\") && pm.expect(message).to.eql('Tenant ID must be a valid UUID')",
											"    })",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "89c0c409-3bef-4535-a444-6c85b6891543",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles?filter[type]=business",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "business"
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "@"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "List Profiles-No auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9484098a-874d-456d-a267-aad2f124fa6e",
										"exec": [
											"try {",
											"    const { message, status } = pm.response.json()",
											"",
											"    pm.test(\"Status code is 401\", function () {",
											"        pm.response.to.have.status(401);",
											"    });",
											"",
											"} catch (error) {",
											"    console.error(\"Error from test:\", error);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "4828863a-f560-4156-a0b9-cf415de1428c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles?filter[type]=business",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "business"
										}
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "19a1ef67-e095-45d4-afc2-7fcdd389276d"
				},
				{
					"name": "Update Profile",
					"item": [
						{
							"name": "Update Profile",
							"id": "86a5f5b0-fa71-422d-84f7-3b74970fc1b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"wunmi\",\n    \"type\": \"personal\",\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles/:profileIdd",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles",
										":profileIdd"
									],
									"variable": [
										{
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "profileIdd",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Profile-Empty fields",
							"id": "9559a458-515f-4eb6-abfa-0b2b8b3754d2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"wunmi\",\n    \"type\": \"personal\",\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles/:profileId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles",
										":profileId"
									],
									"variable": [
										{
											"id": "dcac1139-5775-470a-97ed-589949a4a0d6",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "583f3fcc-2b84-4a9a-85f0-43db372135ba",
											"key": "profileId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Profile-Invalid Tenant Id",
							"id": "cff99cb7-856d-4337-b77e-8d741c03a27c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"wunmi\",\n    \"type\": \"personal\",\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles/:profileId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles",
										":profileId"
									],
									"variable": [
										{
											"id": "dcac1139-5775-470a-97ed-589949a4a0d6",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "583f3fcc-2b84-4a9a-85f0-43db372135ba",
											"key": "profileId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Profile-Invalid Profile Id",
							"id": "9019968b-4c3f-496e-b6f7-ca8e847e2c93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"wunmi\",\n    \"type\": \"personal\",\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles/:profileId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles",
										":profileId"
									],
									"variable": [
										{
											"id": "dcac1139-5775-470a-97ed-589949a4a0d6",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "583f3fcc-2b84-4a9a-85f0-43db372135ba",
											"key": "profileId",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "918b4223-fbe4-46fb-a3ab-8b59c232dadb"
				},
				{
					"name": "Delete Profile",
					"item": [
						{
							"name": "Delete Profile",
							"id": "2a3eb34a-b99c-466f-969d-080966d19a37",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles/:profileId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles",
										":profileId"
									],
									"variable": [
										{
											"id": "ab19b60b-90e2-4f85-adc8-b8075c071b52",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "a717e63c-aea7-462a-828c-8947c70b5bc3",
											"key": "profileId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Profile-Invalid Tenant Id",
							"id": "03c42995-b987-443b-a6c8-62161c9fe4a7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles/:profileId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles",
										":profileId"
									],
									"variable": [
										{
											"id": "ab19b60b-90e2-4f85-adc8-b8075c071b52",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "a717e63c-aea7-462a-828c-8947c70b5bc3",
											"key": "profileId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Profile-Invalid ProfileId",
							"id": "558ce211-6bef-43ff-bd14-72802e9000da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/tenants/:tenantId/profiles/:profileId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tenants",
										":tenantId",
										"profiles",
										":profileId"
									],
									"variable": [
										{
											"id": "ab19b60b-90e2-4f85-adc8-b8075c071b52",
											"key": "tenantId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"id": "a717e63c-aea7-462a-828c-8947c70b5bc3",
											"key": "profileId",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "8bdb626b-e5c8-4883-9902-3f8946996460"
				}
			],
			"id": "d2004ca3-5ca7-4a14-8cae-a7dddf9573f0"
		}
	]
}